Instruções para Docker:
1- Criar a pasta target (se desejar criar via Power shell ao invés de atualizar o Maven):
C:\Users\ricar\OneDrive\Documentos\aaRicardo\Cursos\Java_Spring_Boot_Rest\rest-with-spring-boot-and-java-erudio\20_hello-docker-after> mvn clean package

2- Construindo o Docker image:
> Docker build -t 20_hello-docker-after:0.0.1-SNAPSHOT .

3- Verificando a imagem do Docker criada:
> Docker images

[ou]

> Docker images ls

4- Subindo a aplicação (executar o container):
> docker run -p 80:80 -d 20_hello-docker-after:0.0.1-SNAPSHOT

5- Verificar o container em execução:
> docker container ls

[ou]

> docker ps

6- Enviar a Image criada para o Docker hub:
> docker tag 20_hello-docker-after:0.0.1-SNAPSHOT ricardoefamilia/20_hello-docker-after:0.0.1-SNAPSHOT

7-Conferindo a nova Tag: 
> docker images

8-Logar no Docker Hub: abrir o Docker Descktop, verificar se o usuário existente na conta é o mesmo do Docker Hub (ricardoefamilia)
> docker login docker.io

Obs.: O docker em seguida vai autenticar as iniciais existentes no docker hub, caso não esteja logado ele vai solicitar a senha.

9-Agora vamos fazer o Push:
> docker push ricardoefamilia/20_hello-docker-after:0.0.1-SNAPSHOT

10-Executando a image guardada no Docker Hub diretamente via Power Shell (Antes precisa limpar, excluir as images no Docker Desktop):
> docker run -p 80:80 -d ricardoefamilia/20_hello-docker-after:0.0.1-SNAPSHOT

Obs.: 1- O docker procura primeiro localmente (por isso a necessidade de excluir as images locais) e, não achando, vai para o Docker Hub e começa a iniciar a execução.
2- É necessário informar a porta de execução do lado do computador local e do lado do Docker Hub (-p 80:80);
3- passando o -d ele executa o container e deixa um hash de execução no Power Shell.

11-Parar a execução de um container:
> docker container stop <CONTAINER ID>

12-Verificando os logs do container:
> docker logs -f <CONTAINER ID>

13-Trocar o nome da Tag (0.0.1-SNAPSHOT, por exemplo):
> docker tag ricardoefamilia/20_hello-docker-after:0.0.2-SNAPSHOT ricardoefamilia/20_hello-docker-after:latest

Obs.: Depois atualize o Docker Hub.

14-Agora com a versão latest (padrão, considerada estável) no Docker Hub, podemos executar diretamente sem passar a tag:
> docker run -p 80:80 ricardoefamilia/20_hello-docker-after

15-Remover uma Docker image:
> docker image remover <CONTAINER ID>

[ou]

> docker rmi <CONTAINER ID>


** Gerenciar Containers **

16-Pausar um container:
> docker container pause <CONTAINER ID>

17-Para sair da pausa:
> docker container unpause <CONTAINER ID>

18-Para inspecionar um container:
> docker container inspect <CONTAINER ID>

19-Verificar os container existentes, porém inativos:
> docker container ls -a

20-Parar um container:
> docker stop <CONTAINER ID>

21-Excluir containers que estão inativos:
> docker container prune

22-Matar abruptamente os processos em container (mais rápido do que stop):
> docker container kill <CONTAINER ID>

23-Acompanhar os eventos nos Docker Containers:
> docker events

24-Mostrar os processos ativos dentro de um container Docker:
> docker top <CONTAINER ID>

25-Rodando com limitações:
a) de memória (por exemplo): > docker run -p 80:80 -m 512m <image>
b) de cpu (por exemplo 50%): > docker run -p 880:80  --cpu-quota 50000 <image>
c) as duas limitações juntas: > docker run -p 80:80 -m 512m --cpu-quota 50000 <image>

26-Passando as informações do sistema:
> docker system df



